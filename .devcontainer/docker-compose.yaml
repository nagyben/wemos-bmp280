version: '3'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        # On Linux, you may need to update USER_UID and USER_GID below if not your local UID is not 1000.
        USER_UID: 1000
        USER_GID: 1000
        VARIANT: 3.9

    environment:
      FIRESTORE_EMULATOR_HOST: localhost:8080
      FIRESTORE_PROJECT_ID: dummy-firestore-id
      GOOGLE_APPLICATION_CREDENTIALS: /workspace/cloud_functions/tests/fake_creds.json
      STORAGE_EMULATOR_HOST: http://localhost:8090

    init: true
    volumes:
      # Forwards the local Docker socket to the container.
      - /var/run/docker.sock:/var/run/docker-host.sock
      # Update this to wherever you want VS Code to mount the folder of your project
      - ..:/workspace:cached

    # Overrides default command so things don't shut down after the process ends.
    command: sleep infinity

    # Uncomment the next four lines if you will use a ptrace-based debuggers like C++, Go, and Rust.
    # cap_add:
    #  - SYS_PTRACE
    # security_opt:
    #   - seccomp:unconfined

    # Uncomment the next line to use a non-root user for all processes.
    # user: vscode

    # Use "forwardPorts" in **devcontainer.json** to forward an app port locally.
    # (Adding the "ports" property to this file will not forward from a Codespace.)

    # Runs app on the same network as the database container, allows "forwardPorts" in devcontainer.json function.
    network_mode: host

  firestore:
    build:
      context: .
      dockerfile: Dockerfile.firestore
    restart: unless-stopped
    ports:
      - 8080:8080
    environment:
      FIRESTORE_PROJECT_ID: dummy-firestore-id
      GCLOUD_PROJECT: dummy-firestore-id

  gcs:
    image: fsouza/fake-gcs-server
    ports:
      - 8090:8090
    restart: unless-stopped
    entrypoint: fake-gcs-server -backend memory -port 8090 -scheme http
    # network_mode: service:firestore